<%# app/views/services/index.html.erb %>
<h1>Services</h1>

<%#
  Filterrific adds the `form_for_filterrific` view helper:
  * adds dom id 'filterrific_filter'
  * applies javascript behaviors:
      * AJAX form submission on change
      * AJAX spinner while AJAX request is being processed
  * sets form_for options like :url, :method and input name prefix
%>
<%= form_for_filterrific @filterrific do |f| %>
  <div>
    Search
    <%# give the search field the 'filterrific-periodically-observed' class for live updates %>
    <%= f.text_field(
      :search_query,
      class: 'filterrific-periodically-observed'
    ) %>
  </div>
  <div>
    Country
    <%= f.select(
      :with_country,
      @filterrific.select_options[:with_country],
      { include_blank: '- Any -' }
    ) %>
  </div>
  <div>
    Price lower than
    <%= f.text_field(:with_price_lower, class: 'filterrific-periodically-observed') %>
  </div>
  <div>
    Price higher than
    <%= f.text_field(:with_price_higher, class: 'filterrific-periodically-observed') %>
  </div>
  <div>
    Cost lower than
    <%= f.text_field(:with_cost_lower, class: 'filterrific-periodically-observed') %>
  </div>
  <div>
    Cost higher than
    <%= f.text_field(:with_cost_higher, class: 'filterrific-periodically-observed') %>
  </div>
  <div>
    Sorted by
    <%= f.select(:sorted_by, @filterrific.select_options[:sorted_by]) %>
  </div>
  <div>
    <%= link_to(
      'Reset filters',
      reset_filterrific_url,
    ) %>
  </div>
  <%# add an automated spinner to your form when the list is refreshed %>
  <%= render_filterrific_spinner %>
<% end %>

<%= render(
  partial: 'services/list',
  locals: { services: @services }
) %>